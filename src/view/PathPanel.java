/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.PathUpdater;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import javax.swing.JLabel;
import javax.swing.Timer;
import model.Node;

/**
 *
 * @author efren
 */
public class PathPanel extends javax.swing.JPanel implements ActionListener {

    private final Timer TIMER = new Timer(1000 / 144, this);
    private int FIELDWIDTH, FIELDHEIGHT, PIXELSIZE;
    private Node[][] grid;
    private final PathUpdater updater;

    /**
     * Creates new form PathPanel
     */
    public PathPanel(int FIELDWIDTH, int FIELDHEIGHT, int PIXELSIZE, Node[][] grid) {
        initComponents();
        this.FIELDWIDTH = FIELDWIDTH;
        this.FIELDHEIGHT = FIELDHEIGHT;
        this.PIXELSIZE = PIXELSIZE;

        this.grid = grid;
        Dimension size = new Dimension(FIELDWIDTH * PIXELSIZE, FIELDHEIGHT * PIXELSIZE);
        setSize(size);
        setPreferredSize(size);
        setMinimumSize(size);

        updater = new PathUpdater(grid, PIXELSIZE, TIMER, true, this);
        this.addMouseListener(updater);
        this.addMouseMotionListener(updater);
        this.addMouseWheelListener(updater);

    }

    @Override
    protected void paintComponent(Graphics g) {
        this.removeAll();
        super.paintComponent(g);
        for (int line = grid.length - 1; line >= 0; line--) {

            for (int pixel = 0; pixel < grid[line].length; pixel++) {
                Color color;
                switch (grid[line][pixel].getType()) {
                    case 1:
                        color = Color.BLACK;//wall
                        break;
                    case 2:
                        color = Color.ORANGE;//pending
                        break;
                    case 3:
                        color = Color.GRAY; //scanned
                        break;
                    case 4:
                        color = Color.RED; //closed
                        break;
                    case 5:
                        color = Color.GREEN; //scanning
                        break;
                    case 100:
                        color = Color.BLUE; //start
                        break;
                    case 200:
                        color = Color.MAGENTA; //end
                        break;
                    case 300:
                        color = Color.CYAN; //Winner 
                        break;
                    default:
                        color = Color.WHITE;
                        break;
                }
                drawPixel(g, pixel, line, PIXELSIZE, color);
                /*JLabel lblNewLabel = new JLabel(grid[line][pixel].getCost()+"");
                lblNewLabel.setBounds( pixel*PIXELSIZE, line*PIXELSIZE, PIXELSIZE, PIXELSIZE);
                this.add(lblNewLabel);
*/
            }
        }
    }

    private static void drawPixel(Graphics g, int x, int y, int pixelSize, Color color) {
        g.setColor(color);
        g.fillRect(x * pixelSize, y * pixelSize, pixelSize, pixelSize);
        g.setColor(Color.BLACK);
        g.drawRect(x * pixelSize, y * pixelSize, pixelSize, pixelSize);
    }
   
    public PathUpdater getUpdater() {
        return updater;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void actionPerformed(ActionEvent e) {
        repaint();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
